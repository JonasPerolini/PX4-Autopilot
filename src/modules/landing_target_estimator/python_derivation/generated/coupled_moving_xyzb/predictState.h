// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <matrix/math.hpp>

namespace sym
{

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: predictState
 *
 * Args:
 *     dt: Scalar
 *     state: Matrix12_1
 *     acc: Matrix31
 *
 * Outputs:
 *     state_pred: Matrix12_1
 */
template <typename Scalar>
void Predictstate(const Scalar dt, const matrix::Matrix<Scalar, 12, 1> &state,
		  const matrix::Matrix<Scalar, 3, 1> &acc,
		  matrix::Matrix<Scalar, 12, 1> *const state_pred = nullptr)
{
	// Total ops: 32

	// Input arrays

	// Intermediate terms (1)
	const Scalar _tmp0 = Scalar(0.5) * std::pow(dt, Scalar(2));

	// Output terms (1)
	if (state_pred != nullptr) {
		matrix::Matrix<Scalar, 12, 1> &_state_pred = (*state_pred);

		_state_pred(0, 0) = -_tmp0 * acc(0, 0) + _tmp0 * state(9, 0) + dt * state(3, 0) + state(0, 0);
		_state_pred(1, 0) = -_tmp0 * acc(1, 0) + _tmp0 * state(10, 0) + dt * state(4, 0) + state(1, 0);
		_state_pred(2, 0) = -_tmp0 * acc(2, 0) + _tmp0 * state(11, 0) + dt * state(5, 0) + state(2, 0);
		_state_pred(3, 0) = -acc(0, 0) * dt + dt * state(9, 0) + state(3, 0);
		_state_pred(4, 0) = -acc(1, 0) * dt + dt * state(10, 0) + state(4, 0);
		_state_pred(5, 0) = -acc(2, 0) * dt + dt * state(11, 0) + state(5, 0);
		_state_pred(6, 0) = state(6, 0);
		_state_pred(7, 0) = state(7, 0);
		_state_pred(8, 0) = state(8, 0);
		_state_pred(9, 0) = state(9, 0);
		_state_pred(10, 0) = state(10, 0);
		_state_pred(11, 0) = state(11, 0);
	}
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
