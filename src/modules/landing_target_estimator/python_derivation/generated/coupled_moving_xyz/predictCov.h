// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <matrix/math.hpp>

namespace sym
{

/**
 * This function was autogenerated from a symbolic function. Do not modify by hand.
 *
 * Symbolic function: predictCov
 *
 * Args:
 *     dt: Scalar
 *     input_var: Matrix33
 *     acc_var: Matrix33
 *     covariance: Matrix99
 *
 * Outputs:
 *     cov_updated: Matrix99
 */
template <typename Scalar>
void Predictcov(const Scalar dt, const matrix::Matrix<Scalar, 3, 3> &input_var,
		const matrix::Matrix<Scalar, 3, 3> &acc_var,
		const matrix::Matrix<Scalar, 9, 9> &covariance,
		matrix::Matrix<Scalar, 9, 9> *const cov_updated = nullptr)
{
	// Total ops: 369

	// Input arrays

	// Intermediate terms (76)
	const Scalar _tmp0 = std::pow(dt, Scalar(2));
	const Scalar _tmp1 = Scalar(0.5) * _tmp0;
	const Scalar _tmp2 = _tmp1 * covariance(6, 6);
	const Scalar _tmp3 = _tmp2 + covariance(0, 6) + covariance(3, 6) * dt;
	const Scalar _tmp4 = _tmp1 * covariance(6, 3) + covariance(0, 3) + covariance(3, 3) * dt;
	const Scalar _tmp5 = Scalar(0.25) * std::pow(dt, Scalar(4));
	const Scalar _tmp6 = _tmp1 * covariance(7, 3) + covariance(1, 3) + covariance(4, 3) * dt;
	const Scalar _tmp7 = _tmp1 * covariance(7, 6);
	const Scalar _tmp8 = _tmp7 + covariance(1, 6) + covariance(4, 6) * dt;
	const Scalar _tmp9 = _tmp1 * covariance(8, 6);
	const Scalar _tmp10 = _tmp9 + covariance(2, 6) + covariance(5, 6) * dt;
	const Scalar _tmp11 = _tmp1 * covariance(8, 3) + covariance(2, 3) + covariance(5, 3) * dt;
	const Scalar _tmp12 = covariance(6, 3) * dt;
	const Scalar _tmp13 = _tmp12 + covariance(3, 3);
	const Scalar _tmp14 = covariance(6, 6) * dt;
	const Scalar _tmp15 = _tmp14 + covariance(3, 6);
	const Scalar _tmp16 = Scalar(0.5) * [&]() {
		const Scalar base = dt;
		return base * base * base;
	}();
	const Scalar _tmp17 = _tmp16 * input_var(0, 0);
	const Scalar _tmp18 = covariance(7, 3) * dt;
	const Scalar _tmp19 = _tmp18 + covariance(4, 3);
	const Scalar _tmp20 = covariance(7, 6) * dt;
	const Scalar _tmp21 = _tmp20 + covariance(4, 6);
	const Scalar _tmp22 = _tmp16 * input_var(1, 0);
	const Scalar _tmp23 = covariance(8, 3) * dt;
	const Scalar _tmp24 = _tmp23 + covariance(5, 3);
	const Scalar _tmp25 = covariance(8, 6) * dt;
	const Scalar _tmp26 = _tmp25 + covariance(5, 6);
	const Scalar _tmp27 = _tmp16 * input_var(2, 0);
	const Scalar _tmp28 = _tmp1 * covariance(6, 4) + covariance(0, 4) + covariance(3, 4) * dt;
	const Scalar _tmp29 = _tmp1 * covariance(6, 7);
	const Scalar _tmp30 = _tmp29 + covariance(0, 7) + covariance(3, 7) * dt;
	const Scalar _tmp31 = _tmp1 * covariance(7, 4) + covariance(1, 4) + covariance(4, 4) * dt;
	const Scalar _tmp32 = _tmp1 * covariance(7, 7);
	const Scalar _tmp33 = _tmp32 + covariance(1, 7) + covariance(4, 7) * dt;
	const Scalar _tmp34 = _tmp1 * covariance(8, 7);
	const Scalar _tmp35 = _tmp34 + covariance(2, 7) + covariance(5, 7) * dt;
	const Scalar _tmp36 = _tmp1 * covariance(8, 4) + covariance(2, 4) + covariance(5, 4) * dt;
	const Scalar _tmp37 = covariance(6, 4) * dt;
	const Scalar _tmp38 = _tmp37 + covariance(3, 4);
	const Scalar _tmp39 = covariance(6, 7) * dt;
	const Scalar _tmp40 = _tmp39 + covariance(3, 7);
	const Scalar _tmp41 = _tmp16 * input_var(0, 1);
	const Scalar _tmp42 = covariance(7, 7) * dt;
	const Scalar _tmp43 = _tmp42 + covariance(4, 7);
	const Scalar _tmp44 = covariance(7, 4) * dt;
	const Scalar _tmp45 = _tmp44 + covariance(4, 4);
	const Scalar _tmp46 = _tmp16 * input_var(1, 1);
	const Scalar _tmp47 = covariance(8, 7) * dt;
	const Scalar _tmp48 = _tmp47 + covariance(5, 7);
	const Scalar _tmp49 = covariance(8, 4) * dt;
	const Scalar _tmp50 = _tmp49 + covariance(5, 4);
	const Scalar _tmp51 = _tmp16 * input_var(2, 1);
	const Scalar _tmp52 = _tmp1 * covariance(6, 8);
	const Scalar _tmp53 = _tmp52 + covariance(0, 8) + covariance(3, 8) * dt;
	const Scalar _tmp54 = _tmp1 * covariance(6, 5) + covariance(0, 5) + covariance(3, 5) * dt;
	const Scalar _tmp55 = _tmp1 * covariance(7, 5) + covariance(1, 5) + covariance(4, 5) * dt;
	const Scalar _tmp56 = _tmp1 * covariance(7, 8);
	const Scalar _tmp57 = _tmp56 + covariance(1, 8) + covariance(4, 8) * dt;
	const Scalar _tmp58 = _tmp1 * covariance(8, 8);
	const Scalar _tmp59 = _tmp58 + covariance(2, 8) + covariance(5, 8) * dt;
	const Scalar _tmp60 = _tmp1 * covariance(8, 5) + covariance(2, 5) + covariance(5, 5) * dt;
	const Scalar _tmp61 = covariance(6, 8) * dt;
	const Scalar _tmp62 = _tmp61 + covariance(3, 8);
	const Scalar _tmp63 = covariance(6, 5) * dt;
	const Scalar _tmp64 = _tmp63 + covariance(3, 5);
	const Scalar _tmp65 = _tmp16 * input_var(0, 2);
	const Scalar _tmp66 = covariance(7, 5) * dt;
	const Scalar _tmp67 = _tmp66 + covariance(4, 5);
	const Scalar _tmp68 = covariance(7, 8) * dt;
	const Scalar _tmp69 = _tmp68 + covariance(4, 8);
	const Scalar _tmp70 = _tmp16 * input_var(1, 2);
	const Scalar _tmp71 = covariance(8, 5) * dt;
	const Scalar _tmp72 = _tmp71 + covariance(5, 5);
	const Scalar _tmp73 = covariance(8, 8) * dt;
	const Scalar _tmp74 = _tmp73 + covariance(5, 8);
	const Scalar _tmp75 = _tmp16 * input_var(2, 2);

	// Output terms (1)
	if (cov_updated != nullptr) {
		matrix::Matrix<Scalar, 9, 9> &_cov_updated = (*cov_updated);

		_cov_updated(0, 0) = _tmp1 * _tmp3 + _tmp1 * covariance(6, 0) + _tmp4 * dt +
				     _tmp5 * input_var(0, 0) + covariance(0, 0) + covariance(3, 0) * dt;
		_cov_updated(1, 0) = _tmp1 * _tmp8 + _tmp1 * covariance(7, 0) + _tmp5 * input_var(1, 0) +
				     _tmp6 * dt + covariance(1, 0) + covariance(4, 0) * dt;
		_cov_updated(2, 0) = _tmp1 * _tmp10 + _tmp1 * covariance(8, 0) + _tmp11 * dt +
				     _tmp5 * input_var(2, 0) + covariance(2, 0) + covariance(5, 0) * dt;
		_cov_updated(3, 0) =
			_tmp1 * _tmp15 + _tmp13 * dt + _tmp17 + covariance(3, 0) + covariance(6, 0) * dt;
		_cov_updated(4, 0) =
			_tmp1 * _tmp21 + _tmp19 * dt + _tmp22 + covariance(4, 0) + covariance(7, 0) * dt;
		_cov_updated(5, 0) =
			_tmp1 * _tmp26 + _tmp24 * dt + _tmp27 + covariance(5, 0) + covariance(8, 0) * dt;
		_cov_updated(6, 0) = _tmp12 + _tmp2 + covariance(6, 0);
		_cov_updated(7, 0) = _tmp18 + _tmp7 + covariance(7, 0);
		_cov_updated(8, 0) = _tmp23 + _tmp9 + covariance(8, 0);
		_cov_updated(0, 1) = _tmp1 * _tmp30 + _tmp1 * covariance(6, 1) + _tmp28 * dt +
				     _tmp5 * input_var(0, 1) + covariance(0, 1) + covariance(3, 1) * dt;
		_cov_updated(1, 1) = _tmp1 * _tmp33 + _tmp1 * covariance(7, 1) + _tmp31 * dt +
				     _tmp5 * input_var(1, 1) + covariance(1, 1) + covariance(4, 1) * dt;
		_cov_updated(2, 1) = _tmp1 * _tmp35 + _tmp1 * covariance(8, 1) + _tmp36 * dt +
				     _tmp5 * input_var(2, 1) + covariance(2, 1) + covariance(5, 1) * dt;
		_cov_updated(3, 1) =
			_tmp1 * _tmp40 + _tmp38 * dt + _tmp41 + covariance(3, 1) + covariance(6, 1) * dt;
		_cov_updated(4, 1) =
			_tmp1 * _tmp43 + _tmp45 * dt + _tmp46 + covariance(4, 1) + covariance(7, 1) * dt;
		_cov_updated(5, 1) =
			_tmp1 * _tmp48 + _tmp50 * dt + _tmp51 + covariance(5, 1) + covariance(8, 1) * dt;
		_cov_updated(6, 1) = _tmp29 + _tmp37 + covariance(6, 1);
		_cov_updated(7, 1) = _tmp32 + _tmp44 + covariance(7, 1);
		_cov_updated(8, 1) = _tmp34 + _tmp49 + covariance(8, 1);
		_cov_updated(0, 2) = _tmp1 * _tmp53 + _tmp1 * covariance(6, 2) + _tmp5 * input_var(0, 2) +
				     _tmp54 * dt + covariance(0, 2) + covariance(3, 2) * dt;
		_cov_updated(1, 2) = _tmp1 * _tmp57 + _tmp1 * covariance(7, 2) + _tmp5 * input_var(1, 2) +
				     _tmp55 * dt + covariance(1, 2) + covariance(4, 2) * dt;
		_cov_updated(2, 2) = _tmp1 * _tmp59 + _tmp1 * covariance(8, 2) + _tmp5 * input_var(2, 2) +
				     _tmp60 * dt + acc_var(0, 0) + covariance(2, 2) + covariance(5, 2) * dt;
		_cov_updated(3, 2) =
			_tmp1 * _tmp62 + _tmp64 * dt + _tmp65 + covariance(3, 2) + covariance(6, 2) * dt;
		_cov_updated(4, 2) =
			_tmp1 * _tmp69 + _tmp67 * dt + _tmp70 + covariance(4, 2) + covariance(7, 2) * dt;
		_cov_updated(5, 2) =
			_tmp1 * _tmp74 + _tmp72 * dt + _tmp75 + covariance(5, 2) + covariance(8, 2) * dt;
		_cov_updated(6, 2) = _tmp52 + _tmp63 + covariance(6, 2);
		_cov_updated(7, 2) = _tmp56 + _tmp66 + covariance(7, 2);
		_cov_updated(8, 2) = _tmp58 + _tmp71 + covariance(8, 2);
		_cov_updated(0, 3) = _tmp17 + _tmp3 * dt + _tmp4;
		_cov_updated(1, 3) = _tmp22 + _tmp6 + _tmp8 * dt;
		_cov_updated(2, 3) = _tmp10 * dt + _tmp11 + _tmp27;
		_cov_updated(3, 3) = _tmp0 * input_var(0, 0) + _tmp13 + _tmp15 * dt;
		_cov_updated(4, 3) = _tmp0 * input_var(1, 0) + _tmp19 + _tmp21 * dt;
		_cov_updated(5, 3) = _tmp0 * input_var(2, 0) + _tmp24 + _tmp26 * dt;
		_cov_updated(6, 3) = _tmp14 + covariance(6, 3);
		_cov_updated(7, 3) = _tmp20 + covariance(7, 3);
		_cov_updated(8, 3) = _tmp25 + covariance(8, 3);
		_cov_updated(0, 4) = _tmp28 + _tmp30 * dt + _tmp41;
		_cov_updated(1, 4) = _tmp31 + _tmp33 * dt + _tmp46;
		_cov_updated(2, 4) = _tmp35 * dt + _tmp36 + _tmp51;
		_cov_updated(3, 4) = _tmp0 * input_var(0, 1) + _tmp38 + _tmp40 * dt;
		_cov_updated(4, 4) = _tmp0 * input_var(1, 1) + _tmp43 * dt + _tmp45;
		_cov_updated(5, 4) = _tmp0 * input_var(2, 1) + _tmp48 * dt + _tmp50;
		_cov_updated(6, 4) = _tmp39 + covariance(6, 4);
		_cov_updated(7, 4) = _tmp42 + covariance(7, 4);
		_cov_updated(8, 4) = _tmp47 + covariance(8, 4);
		_cov_updated(0, 5) = _tmp53 * dt + _tmp54 + _tmp65;
		_cov_updated(1, 5) = _tmp55 + _tmp57 * dt + _tmp70;
		_cov_updated(2, 5) = _tmp59 * dt + _tmp60 + _tmp75;
		_cov_updated(3, 5) = _tmp0 * input_var(0, 2) + _tmp62 * dt + _tmp64;
		_cov_updated(4, 5) = _tmp0 * input_var(1, 2) + _tmp67 + _tmp69 * dt;
		_cov_updated(5, 5) = _tmp0 * input_var(2, 2) + _tmp72 + _tmp74 * dt + acc_var(1, 1);
		_cov_updated(6, 5) = _tmp61 + covariance(6, 5);
		_cov_updated(7, 5) = _tmp68 + covariance(7, 5);
		_cov_updated(8, 5) = _tmp73 + covariance(8, 5);
		_cov_updated(0, 6) = _tmp3;
		_cov_updated(1, 6) = _tmp8;
		_cov_updated(2, 6) = _tmp10;
		_cov_updated(3, 6) = _tmp15;
		_cov_updated(4, 6) = _tmp21;
		_cov_updated(5, 6) = _tmp26;
		_cov_updated(6, 6) = covariance(6, 6);
		_cov_updated(7, 6) = covariance(7, 6);
		_cov_updated(8, 6) = covariance(8, 6);
		_cov_updated(0, 7) = _tmp30;
		_cov_updated(1, 7) = _tmp33;
		_cov_updated(2, 7) = _tmp35;
		_cov_updated(3, 7) = _tmp40;
		_cov_updated(4, 7) = _tmp43;
		_cov_updated(5, 7) = _tmp48;
		_cov_updated(6, 7) = covariance(6, 7);
		_cov_updated(7, 7) = covariance(7, 7);
		_cov_updated(8, 7) = covariance(8, 7);
		_cov_updated(0, 8) = _tmp53;
		_cov_updated(1, 8) = _tmp57;
		_cov_updated(2, 8) = _tmp59;
		_cov_updated(3, 8) = _tmp62;
		_cov_updated(4, 8) = _tmp69;
		_cov_updated(5, 8) = _tmp74;
		_cov_updated(6, 8) = covariance(6, 8);
		_cov_updated(7, 8) = covariance(7, 8);
		_cov_updated(8, 8) = acc_var(2, 2) + covariance(8, 8);
	}
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
